name: GitHub-Jira Two-Way Sync

on:
  issues:
    types: [opened, edited]
  issue_comment:
    types: [created]
  repository_dispatch:
    types: [jira-comment-sync]

jobs:
  sync-issue-to-jira:
    if: github.event_name == 'issues' && github.event.action == 'opened'
    runs-on: ubuntu-latest
    environment: JIRA
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Create Jira ticket from GitHub issue
        id: create-jira
        run: |
          # Escape special characters in issue body and title
          ISSUE_TITLE=$(echo '${{ github.event.issue.title }}' | sed 's/"/\\"/g' | sed "s/'/\\'/g")
          ISSUE_BODY=$(echo '${{ github.event.issue.body }}' | sed 's/"/\\"/g' | sed "s/'/\\'/g")

          # Create Jira issue payload with Atlassian Document Format
          PAYLOAD=$(cat << EOF
          {
            "fields": {
              "project": {
                "key": "${{ secrets.JIRA_PROJECT_KEY }}"
              },
              "summary": "[GitHub] ${ISSUE_TITLE}",
              "description": {
                "type": "doc",
                "version": 1,
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "Original GitHub Issue: ",
                        "marks": [{"type": "strong"}]
                      },
                      {
                        "type": "text",
                        "text": "${{ github.event.issue.html_url }}",
                        "marks": [
                          {
                            "type": "link",
                            "attrs": {
                              "href": "${{ github.event.issue.html_url }}"
                            }
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "Created by: ${{ github.event.issue.user.login }} | Created at: ${{ github.event.issue.created_at }}"
                      }
                    ]
                  },
                  {
                    "type": "rule"
                  },
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "${ISSUE_BODY}"
                      }
                    ]
                  }
                ]
              },
              "issuetype": {
                "name": "Task"
              },
              "customfield_10000": "${{ github.event.issue.html_url }}"
            }
          }
          EOF
          )

          # Create the Jira issue
          echo "Creating Jira ticket..."
          RESPONSE=$(curl -s -w "\n%{http_code}" \
            -X POST \
            -H "Accept: application/json" \
            -H "Content-Type: application/json" \
            -u "${{ secrets.JIRA_USER_EMAIL }}:${{ secrets.JIRA_API_TOKEN }}" \
            -d "$PAYLOAD" \
            "${{ secrets.JIRA_BASE_URL }}/rest/api/3/issue")

          HTTP_CODE=$(echo "$RESPONSE" | tail -n1)
          BODY=$(echo "$RESPONSE" | head -n -1)

          if [ "$HTTP_CODE" -eq 201 ]; then
            JIRA_KEY=$(echo "$BODY" | jq -r '.key')
            JIRA_URL="${{ secrets.JIRA_BASE_URL }}/browse/$JIRA_KEY"
            echo "jira-key=$JIRA_KEY" >> $GITHUB_OUTPUT
            echo "jira-url=$JIRA_URL" >> $GITHUB_OUTPUT
            echo "‚úÖ Successfully created Jira ticket: $JIRA_KEY"
            echo "üîó Jira URL: $JIRA_URL"
          else
            echo "‚ùå Failed to create Jira ticket. HTTP Code: $HTTP_CODE"
            echo "Response: $BODY"
            exit 1
          fi

      - name: Comment on GitHub issue with Jira link
        if: steps.create-jira.outputs.jira-key
        uses: actions/github-script@v7
        with:
          script: |
            const jiraKey = '${{ steps.create-jira.outputs.jira-key }}';
            const jiraUrl = '${{ steps.create-jira.outputs.jira-url }}';

            const commentBody = `üé´ **Jira Ticket Created**

            **Ticket:** [${jiraKey}](${jiraUrl})

            This GitHub issue has been synchronized with Jira. Comments made on either platform will be synced automatically.

            ---
            *ü§ñ Automated by GitHub-Jira Sync*`;

            await github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: commentBody
            });

            console.log(`‚úÖ Added Jira link comment to GitHub issue #${context.issue.number}`);

  sync-github-comment-to-jira:
    if: github.event_name == 'issue_comment' && github.event.action == 'created'
    runs-on: ubuntu-latest
    environment: JIRA
    steps:
      - name: Get Jira ticket key from issue
        id: get-jira-key
        uses: actions/github-script@v7
        with:
          script: |
            // Skip if comment is from GitHub Actions bot to prevent loops
            if (context.payload.comment.user.type === 'Bot') {
              console.log('Skipping bot comment to prevent loops');
              return;
            }

            const comments = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number
            });

            let jiraKey = null;
            let jiraUrl = null;

            for (const comment of comments.data) {
              const match = comment.body.match(/\*\*Ticket:\*\* \[([A-Z]+-\d+)\]\((.*?)\)/);
              if (match) {
                jiraKey = match[1];
                jiraUrl = match[2];
                break;
              }
            }

            if (jiraKey) {
              core.setOutput('jira-key', jiraKey);
              core.setOutput('jira-url', jiraUrl);
              console.log(`Found Jira ticket: ${jiraKey}`);
            } else {
              console.log('No Jira ticket found for this issue');
            }

      - name: Add comment to Jira ticket
        if: steps.get-jira-key.outputs.jira-key
        run: |
          # Escape special characters in comment body
          COMMENT_BODY=$(echo '${{ github.event.comment.body }}' | sed 's/"/\\"/g' | sed "s/'/\\'/g")

          PAYLOAD=$(cat << EOF
          {
            "body": {
              "type": "doc",
              "version": 1,
              "content": [
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "üí¨ Comment from GitHub by ${{ github.event.comment.user.login }}:",
                      "marks": [{"type": "em"}]
                    }
                  ]
                },
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "${COMMENT_BODY}"
                    }
                  ]
                },
                {
                  "type": "rule"
                },
                {
                  "type": "paragraph",
                  "content": [
                    {
                      "type": "text",
                      "text": "View on GitHub",
                      "marks": [
                        {
                          "type": "link",
                          "attrs": {
                            "href": "${{ github.event.comment.html_url }}"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          }
          EOF
          )

          echo "Adding comment to Jira ticket: ${{ steps.get-jira-key.outputs.jira-key }}"
          RESPONSE=$(curl -s -w "\n%{http_code}" \
            -X POST \
            -H "Accept: application/json" \
            -H "Content-Type: application/json" \
            -u "${{ secrets.JIRA_USER_EMAIL }}:${{ secrets.JIRA_API_TOKEN }}" \
            -d "$PAYLOAD" \
            "${{ secrets.JIRA_BASE_URL }}/rest/api/3/issue/${{ steps.get-jira-key.outputs.jira-key }}/comment")

          HTTP_CODE=$(echo "$RESPONSE" | tail -n1)

          if [ "$HTTP_CODE" -eq 201 ]; then
            echo "‚úÖ Successfully added comment to Jira ticket: ${{ steps.get-jira-key.outputs.jira-key }}"
          else
            echo "‚ùå Failed to add comment to Jira ticket. HTTP Code: $HTTP_CODE"
            RESPONSE_BODY=$(echo "$RESPONSE" | head -n -1)
            echo "Response: $RESPONSE_BODY"
          fi

  sync-jira-comment-to-github:
    if: github.event_name == 'repository_dispatch' && github.event.action == 'jira-comment-sync'
    runs-on: ubuntu-latest
    environment: JIRA
    steps:
      - name: Add Jira comment to GitHub issue
        uses: actions/github-script@v7
        with:
          script: |
            const payload = context.payload.client_payload;

            if (!payload.issue_number || !payload.comment_body || !payload.author) {
              core.setFailed('Missing required payload data: issue_number, comment_body, or author');
              return;
            }

            const commentBody = `üí¨ **Comment from Jira by ${payload.author}:**

            ${payload.comment_body}

            ---
            *Synced from [Jira](${payload.jira_url || 'Jira'}) ‚Ä¢ ü§ñ Automated by GitHub-Jira Sync*`;

            try {
              await github.rest.issues.createComment({
                issue_number: parseInt(payload.issue_number),
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: commentBody
              });
              
              console.log(`‚úÖ Added Jira comment to GitHub issue #${payload.issue_number}`);
            } catch (error) {
              core.setFailed(`Failed to add comment: ${error.message}`);
            }

  update-jira-on-issue-edit:
    if: github.event_name == 'issues' && github.event.action == 'edited'
    runs-on: ubuntu-latest
    environment: JIRA
    steps:
      - name: Get Jira ticket key from issue
        id: get-jira-key
        uses: actions/github-script@v7
        with:
          script: |
            const comments = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number
            });

            let jiraKey = null;

            for (const comment of comments.data) {
              const match = comment.body.match(/\*\*Ticket:\*\* \[([A-Z]+-\d+)\]/);
              if (match) {
                jiraKey = match[1];
                break;
              }
            }

            if (jiraKey) {
              core.setOutput('jira-key', jiraKey);
              console.log(`Found Jira ticket: ${jiraKey}`);
            } else {
              console.log('No Jira ticket found for this issue');
            }

      - name: Update Jira ticket description
        if: steps.get-jira-key.outputs.jira-key
        run: |
          # Escape special characters in issue body and title
          ISSUE_TITLE=$(echo '${{ github.event.issue.title }}' | sed 's/"/\\"/g' | sed "s/'/\\'/g")
          ISSUE_BODY=$(echo '${{ github.event.issue.body }}' | sed 's/"/\\"/g' | sed "s/'/\\'/g")
          CURRENT_TIME=$(date -u +"%Y-%m-%d %H:%M:%S UTC")

          PAYLOAD=$(cat << EOF
          {
            "fields": {
              "summary": "[GitHub] ${ISSUE_TITLE}",
              "description": {
                "type": "doc",
                "version": 1,
                "content": [
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "Original GitHub Issue: ",
                        "marks": [{"type": "strong"}]
                      },
                      {
                        "type": "text",
                        "text": "${{ github.event.issue.html_url }}",
                        "marks": [
                          {
                            "type": "link",
                            "attrs": {
                              "href": "${{ github.event.issue.html_url }}"
                            }
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "Last updated: ${CURRENT_TIME} | Updated by: ${{ github.event.sender.login }}"
                      }
                    ]
                  },
                  {
                    "type": "rule"
                  },
                  {
                    "type": "paragraph",
                    "content": [
                      {
                        "type": "text",
                        "text": "${ISSUE_BODY}"
                      }
                    ]
                  }
                ]
              }
            }
          }
          EOF
          )

          echo "Updating Jira ticket: ${{ steps.get-jira-key.outputs.jira-key }}"
          RESPONSE=$(curl -s -w "\n%{http_code}" \
            -X PUT \
            -H "Accept: application/json" \
            -H "Content-Type: application/json" \
            -u "${{ secrets.JIRA_USER_EMAIL }}:${{ secrets.JIRA_API_TOKEN }}" \
            -d "$PAYLOAD" \
            "${{ secrets.JIRA_BASE_URL }}/rest/api/3/issue/${{ steps.get-jira-key.outputs.jira-key }}")

          HTTP_CODE=$(echo "$RESPONSE" | tail -n1)

          if [ "$HTTP_CODE" -eq 204 ]; then
            echo "‚úÖ Successfully updated Jira ticket: ${{ steps.get-jira-key.outputs.jira-key }}"
          else
            echo "‚ùå Failed to update Jira ticket. HTTP Code: $HTTP_CODE"
            RESPONSE_BODY=$(echo "$RESPONSE" | head -n -1)
            echo "Response: $RESPONSE_BODY"
          fi
